{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Me\\\\Amigos\\\\formriderjs\\\\FormRiderjs-website\\\\pages\\\\docs\\\\[slug]\\\\index.js\";\nimport matter from \"gray-matter\";\nimport SideNav from \"../../../components/sideNav/Sidenav\";\nimport Reactmarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport styles from \"../../../pages/docs.module.scss\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneDark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n\nfunction Docs({\n  data\n}) {\n  //extracting real data from data using gray-matter package\n  const realData = data.map(docs => matter(docs)); //then we map over these real data to get what is inside this freaking object\n\n  const unSortedDocs = realData.map(docs => docs.data); //sorting docs\n\n  const docs = unSortedDocs.sort((a, b) => {\n    return a.order - b.order;\n  });\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  let docsToBeShown;\n  realData.forEach(element => {\n    if (element.data.slug === slug) {\n      docsToBeShown = element;\n    }\n  });\n  const renderers = {\n    code: ({\n      language,\n      value\n    }) => {\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        style: atomOneDark,\n        language: language,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {\n      docs: docs,\n      currentlyOpenedSlug: slug,\n      isOpened: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sideNavButton,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/burgerIconClosed.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/burgerIconOpened.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pageLayout,\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.mainLayout,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"form rider brand\",\n            src: \"/brand.png\",\n            className: styles.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.title,\n            children: docsToBeShown.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: docsToBeShown.data.titleExplained\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: /*#__PURE__*/_jsxDEV(Reactmarkdown, {\n            escapeHtml: false,\n            renderers: renderers,\n            children: docsToBeShown.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.editPageContainer,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: styles.editPage,\n            href: \"https://github.com/sirageDb/FormRiderjs-website/tree/main/content/\" + `${slug}` + \".md\",\n            target: \"_blank\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Edit this page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.editPageIcon,\n              alt: \"Form rider page edit on github\",\n              src: \"/edit.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getServerSideProps() {\n  const fs = require(\"fs\");\n\n  const files = fs.readdirSync(`${process.cwd()}/content`, \"utf-8\");\n  const docs = files.filter(func => func.endsWith(\".md\"));\n  const data = docs.map(doc => {\n    const path = `${process.cwd()}/content/${doc}`;\n    const rawContent = fs.readFileSync(path, {\n      encoding: \"utf-8\"\n    });\n    return rawContent;\n  });\n  return {\n    props: {\n      data: data\n    }\n  };\n}\nexport default Docs;","map":{"version":3,"sources":["C:/Me/Amigos/formriderjs/FormRiderjs-website/pages/docs/[slug]/index.js"],"names":["matter","SideNav","Reactmarkdown","useRouter","styles","SyntaxHighlighter","atomOneDark","Docs","data","realData","map","docs","unSortedDocs","sort","a","b","order","router","slug","query","docsToBeShown","forEach","element","renderers","code","language","value","sideNavButton","pageLayout","mainLayout","titleContainer","brand","title","titleExplained","content","editPageContainer","editPage","editPageIcon","getServerSideProps","fs","require","files","readdirSync","process","cwd","filter","func","endsWith","doc","path","rawContent","readFileSync","encoding","props"],"mappings":"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","sourcesContent":["import matter from \"gray-matter\";\r\nimport SideNav from \"../../../components/sideNav/Sidenav\";\r\nimport Reactmarkdown from \"react-markdown\";\r\nimport { useRouter } from \"next/router\";\r\nimport styles from \"../../../pages/docs.module.scss\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { atomOneDark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\r\n\r\nfunction Docs({ data }) {\r\n  //extracting real data from data using gray-matter package\r\n  const realData = data.map((docs) => matter(docs));\r\n  //then we map over these real data to get what is inside this freaking object\r\n  const unSortedDocs = realData.map((docs) => docs.data);\r\n\r\n  //sorting docs\r\n  const docs = unSortedDocs.sort((a, b) => {\r\n    return a.order - b.order;\r\n  });\r\n\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n\r\n  let docsToBeShown;\r\n  realData.forEach((element) => {\r\n    if (element.data.slug === slug) {\r\n      docsToBeShown = element;\r\n    }\r\n  });\r\n\r\n  const renderers = {\r\n    code: ({ language, value }) => {\r\n      return (\r\n        <SyntaxHighlighter\r\n          style={atomOneDark}\r\n          language={language}\r\n          children={value}\r\n        />\r\n      );\r\n    },\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SideNav docs={docs} currentlyOpenedSlug={slug} isOpened={false} />\r\n      <div className={styles.sideNavButton}>\r\n      <img src={\"/burgerIconClosed.svg\"}/>\r\n      <img src={\"/burgerIconOpened.svg\"}/>\r\n      </div>\r\n      <div className={styles.pageLayout}>\r\n        <main className={styles.mainLayout}>\r\n          <div className={styles.titleContainer}>\r\n            <img\r\n              alt={\"form rider brand\"}\r\n              src={\"/brand.png\"}\r\n              className={styles.brand}\r\n            />\r\n            <h1 className={styles.title}>{docsToBeShown.data.title}</h1>\r\n          </div>\r\n          <h3>{docsToBeShown.data.titleExplained}</h3>\r\n          <div className={styles.content}>\r\n            <Reactmarkdown escapeHtml={false} renderers={renderers}>\r\n              {docsToBeShown.content}\r\n            </Reactmarkdown>\r\n          </div>\r\n          <div className={styles.editPageContainer}>\r\n            <a\r\n              className={styles.editPage}\r\n              href={\r\n                \"https://github.com/sirageDb/FormRiderjs-website/tree/main/content/\" +\r\n                `${slug}` +\r\n                \".md\"\r\n              }\r\n              target=\"_blank\"\r\n            >\r\n              <div>Edit this page</div>\r\n              <img\r\n                className={styles.editPageIcon}\r\n                alt=\"Form rider page edit on github\"\r\n                src={\"/edit.svg\"}\r\n              ></img>\r\n            </a>\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <div >\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n  const fs = require(\"fs\");\r\n  const files = fs.readdirSync(`${process.cwd()}/content`, \"utf-8\");\r\n  const docs = files.filter((func) => func.endsWith(\".md\"));\r\n  const data = docs.map((doc) => {\r\n    const path = `${process.cwd()}/content/${doc}`;\r\n    const rawContent = fs.readFileSync(path, { encoding: \"utf-8\" });\r\n\r\n    return rawContent;\r\n  });\r\n\r\n  return {\r\n    props: { data: data },\r\n  };\r\n}\r\n\r\nexport default Docs;\r\n"]},"metadata":{},"sourceType":"module"}