{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport matter from \"gray-matter\";\nimport SideNav from \"../../../components/sideNav/Sidenav\";\nimport Reactmarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport styles from \"../../../pages/docs.module.scss\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneDark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n\nfunction Docs({\n  data\n}) {\n  //extracting real data from data using gray-matter package\n  const realData = data.map(docs => matter(docs)); //then we map over these real data to get what is inside this freaking object\n\n  const unSortedDocs = realData.map(docs => docs.data); //sorting docs\n\n  const docs = unSortedDocs.sort((a, b) => {\n    return a.order - b.order;\n  });\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  let docsToBeShown;\n  realData.forEach(element => {\n    if (element.data.slug === slug) {\n      docsToBeShown = element;\n    }\n  });\n  const renderers = {\n    code: ({\n      language,\n      value\n    }) => {\n      return /*#__PURE__*/_jsx(SyntaxHighlighter, {\n        style: atomOneDark,\n        language: language,\n        children: value\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(SideNav, {\n      docs: docs,\n      currentlyOpenedSlug: slug\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.pageLayout,\n      children: /*#__PURE__*/_jsxs(\"main\", {\n        className: styles.mainLayout,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.titleContainer,\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            alt: \"form rider brand\",\n            src: \"/brand.png\",\n            className: styles.brand\n          }), /*#__PURE__*/_jsx(\"h1\", {\n            className: styles.title,\n            children: docsToBeShown.data.title\n          })]\n        }), /*#__PURE__*/_jsx(\"h3\", {\n          children: docsToBeShown.data.titleExplained\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.content,\n          children: /*#__PURE__*/_jsx(Reactmarkdown, {\n            escapeHtml: false,\n            renderers: renderers,\n            children: docsToBeShown.content\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.editPageContainer,\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            className: styles.editPage,\n            href: \"https://github.com/sirageDb/FormRiderjs-website/tree/main/content/\" + `${slug}` + \".md\",\n            target: \"_blank\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              children: \"Edit this page\"\n            }), /*#__PURE__*/_jsx(\"img\", {\n              className: styles.editPageIcon,\n              alt: \"Form rider page edit on github\",\n              src: \"/edit.svg\"\n            })]\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport async function getServerSideProps() {\n  const fs = require(\"fs\");\n\n  const files = fs.readdirSync(`${process.cwd()}/content`, \"utf-8\");\n  const docs = files.filter(func => func.endsWith(\".md\"));\n  const data = docs.map(doc => {\n    const path = `${process.cwd()}/content/${doc}`;\n    const rawContent = fs.readFileSync(path, {\n      encoding: \"utf-8\"\n    });\n    return rawContent;\n  });\n  return {\n    props: {\n      data: data\n    }\n  };\n}\nexport default Docs;","map":null,"metadata":{},"sourceType":"module"}