{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[17],{QiHo:function(r,t,n){\"use strict\";n.r(t),n.d(t,\"CheckInputEmail\",(function(){return i}));class i{constructor(){this.validationErrorArray=[]}validate(r,t,n,i,o){if(!0===t&&function(r){return r.length>0||0!==r.length&&void 0}(i)){if(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(i).toLowerCase()))return!0;this.validationErrorArray.push(n,o)}}}}}]);","map":{"version":3,"sources":["static/chunks/17.f681fc4eb7ce6f2f83af.js"],"names":["window","push","QiHo","module","__webpack_exports__","__webpack_require__","r","d","CheckInputEmail","[object Object]","this","validationErrorArray","propertyKeyCapitalized","propertyValue","formInputName","formInputValue","propertyErrorText","length","inputIsBeingUsed","test","String","toLowerCase"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,mBAAmB,WAAa,OAAOI,KACjH,MAAMA,EACFC,cACIC,KAAKC,qBAAuB,GAIhCF,SAASG,EAAwBC,EAAeC,EAAeC,EAAgBC,GAa3E,IAAsB,IAAlBH,GAXmB,SAASE,GAC5B,OAAGA,EAAeE,OAAS,GAGE,IAA1BF,EAAeE,aAAlB,EAO0BC,CAAiBH,GAAiB,CAE5D,GADY,0JACFI,KAAKC,OAAOL,GAAgBM,eAClC,OAAO,EAEPX,KAAKC,qBAAqBV,KAAKa,EAAcE"},"name":"static/chunks/17.f681fc4eb7ce6f2f83af.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[17],{\n\n/***/ \"QiHo\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckInputEmail\", function() { return CheckInputEmail; });\nclass CheckInputEmail{\r\n    constructor() {\r\n        this.validationErrorArray = [];\r\n    }\r\n\r\n\r\n    validate(propertyKeyCapitalized, propertyValue, formInputName, formInputValue, propertyErrorText) {\r\n        //return true if input is being used / return false if not\r\n        let inputIsBeingUsed = function(formInputValue){\r\n            if(formInputValue.length > 0) {\r\n                return true;\r\n            }\r\n            if(formInputValue.length === 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (propertyValue === true && inputIsBeingUsed(formInputValue)) {\r\n            let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            if (regex.test(String(formInputValue).toLowerCase())) {\r\n                return true;\r\n            } else {\r\n                this.validationErrorArray.push(formInputName,propertyErrorText);\r\n            }\r\n        }\r\n    }\r\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:\\Me\\Amigos\\formriderjs\\FormRiderjs-website\\node_modules\\formriderjs\\src\\validators\\checkInputEmail.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAO;AACP;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,2CAA2C,yBAAyB,6BAA6B,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,iCAAiC,GAAG;AAC7K;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,C","file":"x","sourcesContent":["export class CheckInputEmail{\r\n    constructor() {\r\n        this.validationErrorArray = [];\r\n    }\r\n\r\n\r\n    validate(propertyKeyCapitalized, propertyValue, formInputName, formInputValue, propertyErrorText) {\r\n        //return true if input is being used / return false if not\r\n        let inputIsBeingUsed = function(formInputValue){\r\n            if(formInputValue.length > 0) {\r\n                return true;\r\n            }\r\n            if(formInputValue.length === 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (propertyValue === true && inputIsBeingUsed(formInputValue)) {\r\n            let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            if (regex.test(String(formInputValue).toLowerCase())) {\r\n                return true;\r\n            } else {\r\n                this.validationErrorArray.push(formInputName,propertyErrorText);\r\n            }\r\n        }\r\n    }\r\n}"]}}