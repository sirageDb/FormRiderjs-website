{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[25],{p6K9:function(t,r,e){\"use strict\";e.r(r),e.d(r,\"CheckInputRegexTest\",(function(){return n}));class n{constructor(){this.validationErrorArray=[]}validate(t,r,e,n,i){let o=r[0],s=r[1],a=new RegExp(o,s);if(\"object\"===typeof r){if(!a.test(n))return!0;this.validationErrorArray.push(e,i)}}}}}]);","map":{"version":3,"sources":["static/chunks/25.ee3f4fa658e8572fc564.js"],"names":["window","push","p6K9","module","__webpack_exports__","__webpack_require__","r","d","CheckInputRegexTest","[object Object]","this","validationErrorArray","propertyKeyCapitalized","propertyValue","formInputName","formInputValue","propertyErrorText","regexSource","regexFlag","regex","RegExp","test"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,uBAAuB,WAAa,OAAOI,KACrH,MAAMA,EACFC,cACIC,KAAKC,qBAAuB,GAGhCF,SAASG,EAAwBC,EAAeC,EAAeC,EAAgBC,GAC3E,IAAIC,EAAcJ,EAAc,GAC5BK,EAAYL,EAAc,GAE1BM,EAAQ,IAAIC,OAAOH,EAAaC,GAEpC,GAA+B,kBAApB,EAA8B,CACrC,IAAIC,EAAME,KAAKN,GAGX,OAAO,EAFPL,KAAKC,qBAAqBV,KAAKa,EAAcE"},"name":"static/chunks/25.ee3f4fa658e8572fc564.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[25],{\n\n/***/ \"p6K9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckInputRegexTest\", function() { return CheckInputRegexTest; });\nclass CheckInputRegexTest {\r\n    constructor() {\r\n        this.validationErrorArray = [];\r\n    }\r\n\r\n    validate(propertyKeyCapitalized, propertyValue, formInputName, formInputValue, propertyErrorText) {\r\n        let regexSource = propertyValue[0];\r\n        let regexFlag = propertyValue[1];\r\n\r\n        let regex = new RegExp(regexSource, regexFlag);\r\n\r\n        if (typeof (propertyValue) === \"object\") {\r\n            if (regex.test(formInputValue)) {\r\n                this.validationErrorArray.push(formInputName,propertyErrorText);\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:\\Me\\Amigos\\formriderjs\\FormRiderjs-website\\node_modules\\formriderjs\\src\\validators\\checkInputRegexTest.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA","file":"x","sourcesContent":["export class CheckInputRegexTest {\r\n    constructor() {\r\n        this.validationErrorArray = [];\r\n    }\r\n\r\n    validate(propertyKeyCapitalized, propertyValue, formInputName, formInputValue, propertyErrorText) {\r\n        let regexSource = propertyValue[0];\r\n        let regexFlag = propertyValue[1];\r\n\r\n        let regex = new RegExp(regexSource, regexFlag);\r\n\r\n        if (typeof (propertyValue) === \"object\") {\r\n            if (regex.test(formInputValue)) {\r\n                this.validationErrorArray.push(formInputName,propertyErrorText);\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}}